// Code generated by mockery v2.7.4. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	redis "github.com/redis/go-redis/v9"
)

// RedisPubSub is an autogenerated mock type for the RedisPubSub type
type RedisPubSub struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *RedisPubSub) Close() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ReceiveMessage provides a mock function with given fields: ctx
func (_m *RedisPubSub) ReceiveMessage(ctx context.Context) (*redis.Message, error) {
	ret := _m.Called(ctx)

	var r0 *redis.Message
	if rf, ok := ret.Get(0).(func(context.Context) *redis.Message); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*redis.Message)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
